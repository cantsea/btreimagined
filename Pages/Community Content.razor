@page "/communitycontent"
@using MudBlazor
@using System.Net.Http.Json
@inject HttpClient Http

<PageTitle>Community Content</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-6">

    <MudText Typo="Typo.h4" GutterBottom="true" Align="Align.Center">
        Community Content
    </MudText>

    <MudText Typo="Typo.body1" Align="Align.Center" Class="mb-4">
        Watch the latest videos, 100% community driven!
    </MudText>

    @if (YouTubeVideoIds is not null && YouTubeVideoIds.Any())
    {
        @foreach (var videoId in YouTubeVideoIds)
        {
            <MudCard Outlined="true" Class="mb-4">
                <MudCardContent>
                    <div style="position: relative; width: 100%; padding-bottom: 56.25%; height: 0;">
                        <iframe src="https://www.youtube.com/embed/@(videoId)"
                                style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none;"
                                frameborder="0"
                                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                allowfullscreen>
                        </iframe>
                    </div>
                </MudCardContent>
            </MudCard>
        }
    }
    else
    {
        <MudText Typo="Typo.body1" Align="Align.Center">Loading videos...</MudText>
    }

</MudContainer>

@code {
    private List<string> YouTubeVideoIds;

    protected override async Task OnInitializedAsync()
    {
        var jsonUrl = "https://raw.githubusercontent.com/fionncmurphy/publicjson/main/servermc_content.json";

        try
        {
            YouTubeVideoIds = await Http.GetFromJsonAsync<List<string>>(jsonUrl);
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Failed to fetch video list: {ex.Message}");
            YouTubeVideoIds = new(); // fallback to empty list
        }
    }
}
