@page "/"
@using MudBlazor
@using System.Net.Http.Json
@inject HttpClient Http

<PageTitle>Home</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-6">

    <!-- Header -->
    <MudText Typo="Typo.h4" GutterBottom="true" Align="Align.Center">
        cantseasharp's Unofficial Server Landing Page!
    </MudText>

    <!-- IP Info Section -->
    <MudCard Outlined="true" Class="mb-4">
        <MudCardContent>
            <MudText Typo="Typo.h6" GutterBottom="true">Server IP Information</MudText>
            <MudText Typo="Typo.body1">
                <strong>Minecraft Java IP:</strong> play.saltymc.org<br />
                <strong>Minecraft Bedrock IP:</strong> play.saltymc.org<br />
                <strong>Bedrock Port:</strong> 19132
            </MudText>
        </MudCardContent>
    </MudCard>

    <!-- Community Video Section -->
    @if (YouTubeVideoIds is not null && YouTubeVideoIds.Any())
    {
        <MudText Typo="Typo.h6" GutterBottom="true" Align="Align.Center" Class="mb-2">
            Server Trailer
        </MudText>

        @foreach (var videoId in YouTubeVideoIds)
        {
            <MudCard Outlined="true" Class="mb-4">
                <MudCardContent>
                    <div style="position: relative; width: 100%; padding-bottom: 56.25%; height: 0;">
                        <iframe src="https://www.youtube.com/embed/@(videoId)"
                                style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none;"
                                frameborder="0"
                                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                allowfullscreen>
                        </iframe>
                    </div>
                </MudCardContent>
            </MudCard>
        }
    }
    else
    {
        <MudText Typo="Typo.body1" Align="Align.Center">Loading videos...</MudText>
    }

</MudContainer>

@code {
    private List<string> YouTubeVideoIds;

    protected override async Task OnInitializedAsync()
    {
        var jsonUrl = "https://raw.githubusercontent.com/fionncmurphy/publicjson/main/servermc_home.json";

        try
        {
            YouTubeVideoIds = await Http.GetFromJsonAsync<List<string>>(jsonUrl);
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Failed to fetch video list: {ex.Message}");
            YouTubeVideoIds = new(); // fallback to empty list
        }
    }
}
